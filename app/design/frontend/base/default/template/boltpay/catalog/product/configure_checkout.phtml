<?php /* @var $this Bolt_Boltpay_Block_Catalog_Product_Boltpay */ ?>
<?php if ($this->isEnabledProductPageCheckout() && $this->isSupportedProductType()): ?>
<script type="text/javascript">
var productPageCheckoutSelector = '<?php $this->escapeHtml($this->getProductPageCheckoutSelector()) ?>';
var order_completed = false;

var boltConfigPDP = {
    _jsonProductCart: <?php echo $this->getCartDataJsForProductPage(); ?>,
    increaseQty: function(number) {
        if (this._jsonProductCart) {
            this._jsonProductCart.items[0].quantity = parseInt(number);
            this._jsonProductCart.total = parseFloat(this._jsonProductCart.total) * number;
        } else {
            console.log('There is no json product data');
        }
    },
    init: function(removeItems) {
        // copy object that we always have correct product data.
        var jsonProductCart = Object.assign({}, this._jsonProductCart),
            boltJsonProductHints = null;

        if (removeItems === true) {
            jsonProductCart.items = [];
        }

        BoltCheckout.configureProductCheckout(
            jsonProductCart,
            boltJsonProductHints,
            <?php echo $this->getBoltCallbacks(); ?>,
            { checkoutButtonClassName: 'bolt-product-checkout-button' }
        );
    }
};

document.addEventListener("DOMContentLoaded", function() {
    var processIntervalCounter = 0;
    /*
     * This Interval function prevents error or even the lack of a button.
     * It is similar an Interval functionality in boltpay/replace.phtml
     */
    var processIntervalProd = setInterval(
        function() {
            processIntervalCounter++;
            if (typeof BoltCheckout !== "undefined") {
                clearInterval(processIntervalProd);
                var qtyValue = parseInt(document.getElementById('qty').value);

                if (qtyValue > 0 && !isNaN(qtyValue)) {
                    boltConfigPDP.increaseQty(qtyValue);
                    boltConfigPDP.init();
                } else {
                    boltConfigPDP.init(true);
                }
            }

            if (processIntervalCounter > 50) {
                clearInterval(processIntervalProd);
            }
        }, 50
    );

    document.getElementById('qty').addEventListener('input', function() {
        var qtyValue = parseInt(this.value);

        if (qtyValue > 0 && !isNaN(qtyValue)) {
            boltConfigPDP.increaseQty(qtyValue);
            boltConfigPDP.init();
        } else {
            boltConfigPDP.init(true);
        }
    });
});

</script>
<?php endif; ?>
